.opacity (@opacity: 0.5) {
  -webkit-opacity: @opacity;
  -moz-opacity: @opacity;
  opacity: @opacity;
}

.settings-criteria(@list) {
  .iter(length(@list));
  .iter(@i) when (@i > 0) {
    .iter(@i - 1);
    @pair: extract(@list, @i);
    @key: extract(@pair, 1);
    @value: extract(@pair, 2);
    .@{key}:before {
      background-color: @value;
    }
  }
}

.categories-list-li(@list) {
  .iter(length(@list));
  .iter(@i) when (@i > 0) {
    .iter(@i - 1);
    @value: extract(@list, @i);
    .categories-list li:nth-child(@{i}):before {
      background-color: @value;
    }
  }
}

.create-classes-for-categories(@list, @list-active) {
  .iter(length(@list));
  .iter(@i) when (@i > 0) {
    .iter(@i - 1);
    @pair: extract(@list, @i);
    @key: extract(@pair, 1);
    @value: extract(@pair, 2);
    .@{key} {
      color: @value;

      .border {
        background-color: @value;
      }
    }
  }
}

.create-classes-for-border(@list) {
  .iter(length(@list));
  .iter(@i) when (@i > 0) {
    .iter(@i - 1);
    @pair: extract(@list, @i);
    @key: extract(@pair, 1);
    @value: extract(@pair, 2);
    .@{key}-border {
      border: 7px solid @value;
    }
  }
}

.create-classes-for-priority(@list, @list-active) {
  .iter(length(@list));
  .iter(@i) when (@i > 0) {
    .iter(@i - 1);
    @pair: extract(@list, @i);
    @key: extract(@pair, 1);
    @value: extract(@pair, 2);
    @value-active: extract(@list-active, @i);
    .@{key} {
      .go-to-timer {
        background-color: @value;
        color: @white;

        &:active {
          background-color: @value-active;
        }

        &:hover {
          background-color: @value-active;
        }
        a:hover {

          &:before {
            content: "\e90e";
          }

          span {
            display: none;
          }
        }
      }

      h2 {
        color: @value;
      }
    }
  }
}

.placeholder(@color) {
  &::-webkit-input-placeholder { 
    color: @color;
  }
  &::-moz-placeholder { 
    color: @color;
  }
  &:-ms-input-placeholder {
    color: @color;
  }
  &:-moz-placeholder {
    color: @color;
  }
}

.radio-buttons(@colors) {
  .iter(length(@colors));
  .iter(@i) when (@i > 0) {
    .iter(@i - 1);
    @pair: extract(@colors, @i);
    @key: extract(@pair, 1);
    @value: extract(@pair, 2);
    .@{key} {
      input[type="radio"] {

        &+label:hover:before {
          background-color: @value;
          box-shadow: 0 0 0 4px @value;
          border: 2px solid @value;
        }

        &:checked+label:before {
          background-color: @value;
          border: 2px solid @madison;
          box-shadow: 0 0 0 4px @value;
        }
      }
    }
  }
}

.checkbox-settings() {

  &+label{
    background: url(/empty-tomato.svg) center center no-repeat;
    display: inline-block;
    width: 21px;
    height: 19px;
    margin-right: 8px;
  }


  &:checked+label {
    background: url("/fill tomato.svg") center center no-repeat;
  }
}

.notification(@list) {
  .iter(length(@list));
  .iter(@i) when (@i > 0) {
    .iter(@i - 1);
    @pair: extract(@list, @i);
    @key: extract(@pair, 1);
    @value: extract(@pair, 2);
    .@{key} {
      background-color: @value;

      .icon-wrapper {
        background-color: lighten(@value, 10%);

        span:before {
          content: @@key;
        }
      }
    }
  }
}

.category-decoration(@list) {
  .iter(length(@list));
  .iter(@i) when (@i > 0) {
    .iter(@i - 1);
    @pair: extract(@list, @i);
    @key: extract(@pair, 1);
    @value: extract(@pair, 2);
    .@{key}-group {
      padding-bottom: 23px;

      .task-list {
        position: relative;
      }
      .task-list:before {
        content: "";
        display: block;
        width: 9px;
        height: 100%;
        background-color: @value;
        position: absolute;
        bottom: 3px;
        z-index: 1;
      }

      .category-heading {
        position: relative;

        &:before {
          content: "";
          position: absolute;
          display: inline-block;
          width: 5px;
          height: 5px;
          background-color: @value;
          border-radius: 50%;
          border: 2px solid @madison;
          -webkit-box-shadow: 0 0 0 4px @value;
          -moz-box-shadow: 0 0 0 4px @value;
          box-shadow: 0 0 0 4px @value;
          left: 0;
          bottom: 5px;
        }
      }
    }
  }
}

.laptop-lg(@rules) {
  @media (max-width: @laptop-lg-width) { @rules(); }
}

.laptop-md(@rules) {
  @media (max-width: @laptop-md-width) { @rules(); }
}

.mobile(@rules) {
  @media (max-width: @mobile-width) { @rules(); }
}

